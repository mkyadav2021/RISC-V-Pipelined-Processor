$date
	Sat Sep 13 16:44:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module ppm $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 # WriteDataM_wire [31:0] $end
$var wire 32 $ ResultW_wire [31:0] $end
$var wire 1 % ResultSrcW_wire $end
$var wire 1 & ResultSrcM_wire $end
$var wire 1 ' ResultSrcE_wire $end
$var wire 1 ( RegWriteW_wire $end
$var wire 1 ) RegWriteW_wb_wire $end
$var wire 1 * RegWriteM_wire $end
$var wire 1 + RegWriteE_wire $end
$var wire 32 , ReadDataW_wire [31:0] $end
$var wire 5 - RdW_wire [4:0] $end
$var wire 5 . RdW_wb_wire [4:0] $end
$var wire 5 / RdM_wire [4:0] $end
$var wire 5 0 RdE_wire [4:0] $end
$var wire 5 1 RS2E [4:0] $end
$var wire 5 2 RS1E [4:0] $end
$var wire 32 3 RD2_E_wire [31:0] $end
$var wire 32 4 RD1_E_wire [31:0] $end
$var wire 32 5 PCTargetE_wire [31:0] $end
$var wire 1 6 PCSrcE_wire $end
$var wire 32 7 PCPlus4W_wire [31:0] $end
$var wire 32 8 PCPlus4M_wire [31:0] $end
$var wire 32 9 PCPlus4E_wire [31:0] $end
$var wire 32 : PCPlus4D_wire [31:0] $end
$var wire 32 ; PCE_wire [31:0] $end
$var wire 32 < PCD_wire [31:0] $end
$var wire 1 = MemWriteM_wire $end
$var wire 1 > MemWriteE_wire $end
$var wire 32 ? InstrD_wire [31:0] $end
$var wire 32 @ ImmExtE_wire [31:0] $end
$var wire 2 A ForwardBE_wire [1:0] $end
$var wire 2 B ForwardAE_wire [1:0] $end
$var wire 1 C BranchE_wire $end
$var wire 1 D ALUSrcE_wire $end
$var wire 32 E ALUResultW_wire [31:0] $end
$var wire 32 F ALUResultM_wire [31:0] $end
$var wire 3 G ALUControlE_wire [2:0] $end
$scope module ds $end
$var wire 3 H ALUControlE [2:0] $end
$var wire 1 D ALUSrcE $end
$var wire 1 C BranchE $end
$var wire 32 I ImmExtE [31:0] $end
$var wire 1 > MemWriteE $end
$var wire 32 J PCE [31:0] $end
$var wire 32 K PCPlus4E [31:0] $end
$var wire 32 L RD1_E [31:0] $end
$var wire 32 M RD2_E [31:0] $end
$var wire 5 N RS1_E [4:0] $end
$var wire 5 O RS2_E [4:0] $end
$var wire 5 P RdE [4:0] $end
$var wire 1 + RegWriteE $end
$var wire 1 ' ResultSrcE $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 Q ResultW [31:0] $end
$var wire 1 R ResultSrcD $end
$var wire 1 ) RegWriteW $end
$var wire 1 S RegWriteD $end
$var wire 5 T RdW [4:0] $end
$var wire 32 U RD2_D [31:0] $end
$var wire 32 V RD1_D [31:0] $end
$var wire 32 W PCPlus4D [31:0] $end
$var wire 32 X PCD [31:0] $end
$var wire 1 Y MemWriteD $end
$var wire 32 Z InstrD [31:0] $end
$var wire 2 [ ImmSrcD [1:0] $end
$var wire 32 \ ImmExtD [31:0] $end
$var wire 1 ] BranchD $end
$var wire 1 ^ ALUSrcD $end
$var wire 2 _ ALUOp_wire [1:0] $end
$var wire 3 ` ALUControlD [2:0] $end
$var reg 3 a ALUControlD_reg [2:0] $end
$var reg 1 D ALUSrcD_reg $end
$var reg 1 C BranchD_reg $end
$var reg 32 b ImmExtD_reg [31:0] $end
$var reg 1 c MemWriteD_reg $end
$var reg 32 d PCD_reg [31:0] $end
$var reg 32 e PCPlus4D_reg [31:0] $end
$var reg 32 f RD1_D_reg [31:0] $end
$var reg 32 g RD2_D_reg [31:0] $end
$var reg 5 h RS1_D_r [4:0] $end
$var reg 5 i RS2_D_r [4:0] $end
$var reg 5 j RdD_reg [4:0] $end
$var reg 1 k RegWriteD_reg $end
$var reg 1 l ResultSrcD_reg $end
$scope module adm $end
$var wire 3 m funct3 [2:0] $end
$var wire 1 n funct7 $end
$var wire 1 o op $end
$var wire 2 p concatenation [1:0] $end
$var wire 2 q ALUOp [1:0] $end
$var wire 3 r ALUControl [2:0] $end
$upscope $end
$scope module mdm $end
$var wire 7 s op [6:0] $end
$var wire 1 t branch $end
$var wire 1 R ResultSrc $end
$var wire 1 S RegWrite $end
$var wire 1 Y MemWrite $end
$var wire 2 u ImmSrc [1:0] $end
$var wire 1 ] Branch $end
$var wire 1 ^ ALUSrc $end
$var wire 2 v ALUOp [1:0] $end
$upscope $end
$scope module rfm $end
$var wire 5 w A1 [4:0] $end
$var wire 5 x A2 [4:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 ) WE3 $end
$var wire 32 y WD3 [31:0] $end
$var wire 32 z RD2 [31:0] $end
$var wire 32 { RD1 [31:0] $end
$var wire 5 | A3 [4:0] $end
$upscope $end
$scope module sem $end
$var wire 2 } ImmSrc [1:0] $end
$var wire 32 ~ Instr [31:0] $end
$var wire 32 !" ImmExt [31:0] $end
$upscope $end
$upscope $end
$scope module es $end
$var wire 3 "" ALUControlE [2:0] $end
$var wire 32 #" ALUResultM [31:0] $end
$var wire 1 D ALUSrcE $end
$var wire 1 C BranchE $end
$var wire 32 $" ImmExtE [31:0] $end
$var wire 1 > MemWriteE $end
$var wire 1 = MemWriteM $end
$var wire 32 %" PCE [31:0] $end
$var wire 32 &" PCPlus4E [31:0] $end
$var wire 32 '" PCPlus4M [31:0] $end
$var wire 1 6 PCSrcE $end
$var wire 32 (" RD1_E [31:0] $end
$var wire 32 )" RD2_E [31:0] $end
$var wire 5 *" RdE [4:0] $end
$var wire 5 +" RdM [4:0] $end
$var wire 1 + RegWriteE $end
$var wire 1 * RegWriteM $end
$var wire 1 ' ResultSrcE $end
$var wire 1 & ResultSrcM $end
$var wire 32 ," WriteDataM [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 -" ZeroE $end
$var wire 32 ." SrcB_h [31:0] $end
$var wire 32 /" SrcBE [31:0] $end
$var wire 32 0" SrcAE [31:0] $end
$var wire 32 1" ResultW [31:0] $end
$var wire 32 2" PCTargetE [31:0] $end
$var wire 2 3" ForwardB_E [1:0] $end
$var wire 2 4" ForwardA_E [1:0] $end
$var wire 32 5" ALUResultE [31:0] $end
$var reg 32 6" ALUResultE_reg [31:0] $end
$var reg 1 7" MemWriteE_reg $end
$var reg 32 8" PCPlus4E_reg [31:0] $end
$var reg 5 9" RdE_reg [4:0] $end
$var reg 1 * RegWriteE_reg $end
$var reg 1 :" ResultSrcE_reg $end
$var reg 32 ;" WriteDataE_reg [31:0] $end
$scope module am $end
$var wire 3 <" ALUControl [2:0] $end
$var wire 32 =" ALUResult [31:0] $end
$var wire 1 >" C $end
$var wire 1 ?" V $end
$var wire 32 @" a_and_b [31:0] $end
$var wire 32 A" a_or_b [31:0] $end
$var wire 32 B" not_b [31:0] $end
$var wire 32 C" sum [31:0] $end
$var wire 32 D" slt [31:0] $end
$var wire 32 E" mux_2 [31:0] $end
$var wire 32 F" mux_1 [31:0] $end
$var wire 1 G" cout $end
$var wire 1 -" Ze $end
$var wire 1 H" N $end
$var wire 32 I" B [31:0] $end
$var wire 32 J" A [31:0] $end
$upscope $end
$scope module for_hazard_srcA $end
$var wire 32 K" a [31:0] $end
$var wire 32 L" c [31:0] $end
$var wire 2 M" s [1:0] $end
$var wire 32 N" d [31:0] $end
$var wire 32 O" b [31:0] $end
$upscope $end
$scope module for_hazard_srcB $end
$var wire 32 P" a [31:0] $end
$var wire 32 Q" c [31:0] $end
$var wire 2 R" s [1:0] $end
$var wire 32 S" d [31:0] $end
$var wire 32 T" b [31:0] $end
$upscope $end
$scope module mm $end
$var wire 32 U" a [31:0] $end
$var wire 32 V" b [31:0] $end
$var wire 1 D s $end
$var wire 32 W" c [31:0] $end
$upscope $end
$scope module pa $end
$var wire 32 X" a [31:0] $end
$var wire 32 Y" b [31:0] $end
$var wire 32 Z" c [31:0] $end
$upscope $end
$upscope $end
$scope module fs $end
$var wire 1 6 PCSrcE $end
$var wire 32 [" PCTargetE [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 \" PCPlus4F [31:0] $end
$var wire 32 ]" PCPlus4D [31:0] $end
$var wire 32 ^" PCFbar [31:0] $end
$var wire 32 _" PCF [31:0] $end
$var wire 32 `" PCD [31:0] $end
$var wire 32 a" InstrF [31:0] $end
$var wire 32 b" InstrD [31:0] $end
$var reg 32 c" InstrF_reg [31:0] $end
$var reg 32 d" PCF_reg [31:0] $end
$var reg 32 e" PCPlus4F_reg [31:0] $end
$scope module im $end
$var wire 1 " rst $end
$var wire 32 f" RD [31:0] $end
$var wire 32 g" A [31:0] $end
$upscope $end
$scope module pam $end
$var wire 32 h" b [31:0] $end
$var wire 32 i" c [31:0] $end
$var wire 32 j" a [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 k" a [31:0] $end
$var wire 32 l" b [31:0] $end
$var wire 1 6 s $end
$var wire 32 m" c [31:0] $end
$upscope $end
$scope module pcm $end
$var wire 32 n" PC_NEXT [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var reg 32 o" PC [31:0] $end
$upscope $end
$upscope $end
$scope module hu $end
$var wire 5 p" RD_M [4:0] $end
$var wire 1 * RegWriteM $end
$var wire 5 q" Rs1_E [4:0] $end
$var wire 5 r" Rs2_E [4:0] $end
$var wire 1 " rst $end
$var wire 1 ( RegWriteW $end
$var wire 5 s" RD_W [4:0] $end
$var wire 2 t" ForwardBE [1:0] $end
$var wire 2 u" ForwardAE [1:0] $end
$upscope $end
$scope module mrws $end
$var wire 32 v" ALUResultM [31:0] $end
$var wire 32 w" ALUResultW [31:0] $end
$var wire 1 = MemWriteM $end
$var wire 32 x" PCPlus4M [31:0] $end
$var wire 32 y" PCPlus4W [31:0] $end
$var wire 5 z" RdM [4:0] $end
$var wire 5 {" RdW [4:0] $end
$var wire 32 |" ReadDataW [31:0] $end
$var wire 1 * RegWriteM $end
$var wire 1 ( RegWriteW $end
$var wire 1 & ResultSrcM $end
$var wire 1 % ResultSrcW $end
$var wire 32 }" WriteDataM [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 ~" RD_M [31:0] $end
$var reg 32 !# ALUResultM_reg [31:0] $end
$var reg 32 "# PCPlus4M_reg [31:0] $end
$var reg 5 ## RdM_reg [4:0] $end
$var reg 32 $# ReadDataM_reg [31:0] $end
$var reg 1 ( RegWriteM_reg $end
$var reg 1 % ResultSrcM_reg $end
$scope module dmm $end
$var wire 32 %# A [31:0] $end
$var wire 32 &# WD [31:0] $end
$var wire 1 = WE $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 '# RD [31:0] $end
$upscope $end
$upscope $end
$scope module wbrs $end
$var wire 32 (# ALUResultW [31:0] $end
$var wire 32 )# PCPlus4W [31:0] $end
$var wire 5 *# RdW [4:0] $end
$var wire 5 +# RdW_wb [4:0] $end
$var wire 32 ,# ReadDataW [31:0] $end
$var wire 1 ( RegWriteW $end
$var wire 1 ) RegWriteW_wb $end
$var wire 1 % ResultSrcW $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 -# ResultW [31:0] $end
$scope module mm1 $end
$var wire 32 .# a [31:0] $end
$var wire 32 /# b [31:0] $end
$var wire 1 % s $end
$var wire 32 0# c [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
b0 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
bx r"
bx q"
b0 p"
bx o"
bx n"
bx m"
b0 l"
bx k"
bx j"
bx i"
b100 h"
bx g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
bx _"
bx ^"
b0 ]"
bx \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
0H"
0G"
b0 F"
b0 E"
b0 D"
b0 C"
b11111111111111111111111111111111 B"
b0 A"
b0 @"
0?"
0>"
b0 ="
b0 <"
b0 ;"
0:"
b0 9"
b0 8"
07"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
1-"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
0t
b0 s
b0 r
b0 q
b0 p
0o
0n
b0 m
0l
0k
b0 j
bx i
bx h
b0 g
b0 f
b0 e
b0 d
0c
b0 b
b0 a
b0 `
b0 _
0^
0]
b0 \
b0 [
b0 Z
0Y
b0 X
b0 W
b0 V
b0 U
b0 T
0S
0R
b0 Q
b0 P
bx O
bx N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
0D
0C
b0 B
b0 A
b0 @
b0 ?
0>
0=
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
06
b0 5
b0 4
b0 3
bx 2
bx 1
b0 0
b0 /
b0 .
b0 -
b0 ,
0+
0*
0)
0(
0'
0&
0%
b0 $
b0 #
0"
1!
$end
#50
0!
#100
b100 ^"
b100 m"
b100 n"
b100 \"
b100 i"
b100 k"
b0 _"
b0 g"
b0 j"
b0 o"
1!
#150
0!
#200
b10100000000001010010011 a"
b10100000000001010010011 f"
1"
1!
#250
0!
#300
1S
1^
b101 \
b101 !"
bx U
bx z
b1100000000001100010011 a"
b1100000000001100010011 f"
b101 x
b10011 s
b1000 ^"
b1000 m"
b1000 n"
b100 :
b100 W
b100 ]"
b10100000000001010010011 ?
b10100000000001010010011 Z
b10100000000001010010011 ~
b10100000000001010010011 b"
b1000 \"
b1000 i"
b1000 k"
b100 _"
b100 g"
b100 j"
b100 o"
b100 e"
b10100000000001010010011 c"
b0 1
b0 O
b0 i
b0 r"
b0 2
b0 N
b0 h
b0 q"
1!
#350
0!
#400
0-"
b101 5"
b101 ="
b101 E"
b101 C"
b101 F"
b11111111111111111111111111111010 B"
b101 A"
b11 \
b11 !"
b11000101000001110110011 a"
b11000101000001110110011 f"
b101 /"
b101 I"
b101 W"
b11 x
b1100 ^"
b1100 m"
b1100 n"
b1000 :
b1000 W
b1000 ]"
b100 <
b100 X
b100 `"
b1100000000001100010011 ?
b1100000000001100010011 Z
b1100000000001100010011 ~
b1100000000001100010011 b"
b1100 \"
b1100 i"
b1100 k"
b1000 _"
b1000 g"
b1000 j"
b1000 o"
b101 1
b101 O
b101 i
b101 r"
b100 9
b100 K
b100 &"
b100 e
b101 0
b101 P
b101 *"
b101 j
b101 5
b101 2"
b101 Z"
b101 ["
b101 l"
b101 @
b101 I
b101 b
b101 $"
b101 V"
b101 Y"
bx 3
bx M
bx g
1D
1+
1k
b1000 e"
b100 d"
b1100000000001100010011 c"
1!
#450
0!
#500
1S
0^
b11 5"
b11 ="
b11 E"
b110 \
b110 !"
bx V
bx {
b10 _
b10 q
b10 v
b11 C"
b10010000000011 a"
b10010000000011 f"
b110 x
b101 w
b110011 s
b10 p
1o
b11 F"
b11111111111111111111111111111100 B"
b11 A"
b10000 ^"
b10000 m"
b10000 n"
b1100 :
b1100 W
b1100 ]"
b1000 <
b1000 X
b1000 `"
b11000101000001110110011 ?
b11000101000001110110011 Z
b11000101000001110110011 ~
b11000101000001110110011 b"
b11 /"
b11 I"
b11 W"
bx ~"
bx '#
b10000 \"
b10000 i"
b10000 k"
b1100 _"
b1100 g"
b1100 j"
b1100 o"
b1100 e"
b1000 d"
b11000101000001110110011 c"
b11 1
b11 O
b11 i
b11 r"
b1000 9
b1000 K
b1000 &"
b1000 e
b100 ;
b100 J
b100 d
b100 %"
b100 X"
b110 0
b110 P
b110 *"
b110 j
b111 5
b111 2"
b111 Z"
b111 ["
b111 l"
b11 @
b11 I
b11 b
b11 $"
b11 V"
b11 Y"
b101 /
b101 +"
b101 9"
b101 p"
b101 z"
b100 8
b100 '"
b100 x"
b100 8"
b101 F
b101 #"
b101 6"
b101 L"
b101 Q"
b101 v"
b101 %#
1*
1!
#550
0!
#600
b1 B
b1 4"
b1 M"
b1 u"
0?"
1^
0H"
b10 A
b10 3"
b10 R"
b10 t"
b0 D"
0-"
b1000 5"
b1000 ="
b1000 E"
0>"
b0 \
b0 !"
b0 U
b0 z
b0 V
b0 {
1R
b0 _
b0 q
b0 v
b100000000010010010011 a"
b100000000010010010011 f"
b11 F"
b11111111111111111111111111111100 B"
b1000 C"
0G"
b111 A"
b1 @"
b0 x
b0 w
b11 s
b10 m
b0 p
0o
b10100 ^"
b10100 m"
b10100 n"
b101 $
b101 Q
b101 y
b101 1"
b101 O"
b101 T"
b101 -#
b101 0#
b11 /"
b11 I"
b11 W"
b101 0"
b101 J"
b101 N"
b11 ."
b11 S"
b11 U"
b10000 :
b10000 W
b10000 ]"
b1100 <
b1100 X
b1100 `"
b10010000000011 ?
b10010000000011 Z
b10010000000011 ~
b10010000000011 b"
b10100 \"
b10100 i"
b10100 k"
b10000 _"
b10000 g"
b10000 j"
b10000 o"
bx ,
bx |"
bx $#
bx ,#
bx /#
b101 E
b101 w"
b101 !#
b101 (#
b101 .#
b100 7
b100 y"
b100 )#
b100 "#
b101 .
b101 T
b101 |
b101 s"
b101 +#
b101 -
b101 {"
b101 ##
b101 *#
1)
1(
b110 /
b110 +"
b110 9"
b110 p"
b110 z"
b1000 8
b1000 '"
b1000 x"
b1000 8"
b11 F
b11 #"
b11 6"
b11 L"
b11 Q"
b11 v"
b11 %#
b110 1
b110 O
b110 i
b110 r"
b101 2
b101 N
b101 h
b101 q"
b1100 9
b1100 K
b1100 &"
b1100 e
b1000 ;
b1000 J
b1000 d
b1000 %"
b1000 X"
b111 0
b111 P
b111 *"
b111 j
b1110 5
b1110 2"
b1110 Z"
b1110 ["
b1110 l"
b110 @
b110 I
b110 b
b110 $"
b110 V"
b110 Y"
bx 4
bx L
bx f
bx ("
bx )"
bx K"
bx P"
0D
b10000 e"
b1100 d"
b10010000000011 c"
1!
#650
0!
#700
1-"
b0 5"
b0 ="
b0 E"
b0 C"
b0 B
b0 4"
b0 M"
b0 u"
b1 \
b1 !"
bx U
bx z
0R
b0 F"
b11111111111111111111111111111111 B"
b0 A"
b0 @"
b0 A
b0 3"
b0 R"
b0 t"
b0 ."
b0 S"
b0 U"
b0 0"
b0 J"
b0 N"
b100101000000010100110011 a"
b100101000000010100110011 f"
b1 x
b10011 s
b0 m
b0 /"
b0 I"
b0 W"
b11000 ^"
b11000 m"
b11000 n"
b10100 :
b10100 W
b10100 ]"
b10000 <
b10000 X
b10000 `"
b100000000010010010011 ?
b100000000010010010011 Z
b100000000010010010011 ~
b100000000010010010011 b"
b11 $
b11 Q
b11 y
b11 1"
b11 O"
b11 T"
b11 -#
b11 0#
b11000 \"
b11000 i"
b11000 k"
b10100 _"
b10100 g"
b10100 j"
b10100 o"
b10100 e"
b10000 d"
b100000000010010010011 c"
b0 1
b0 O
b0 i
b0 r"
b0 2
b0 N
b0 h
b0 q"
b10000 9
b10000 K
b10000 &"
b10000 e
b1100 ;
b1100 J
b1100 d
b1100 %"
b1100 X"
b1000 0
b1000 P
b1000 *"
b1000 j
b1100 5
b1100 2"
b1100 Z"
b1100 ["
b1100 l"
b0 @
b0 I
b0 b
b0 $"
b0 V"
b0 Y"
b0 3
b0 M
b0 g
b0 4
b0 L
b0 f
b0 ("
b0 )"
b0 K"
b0 P"
1'
1l
1D
b111 /
b111 +"
b111 9"
b111 p"
b111 z"
b1100 8
b1100 '"
b1100 x"
b1100 8"
b11 #
b11 ,"
b11 }"
b11 &#
b11 ;"
b1000 F
b1000 #"
b1000 6"
b1000 L"
b1000 Q"
b1000 v"
b1000 %#
b11 E
b11 w"
b11 !#
b11 (#
b11 .#
b1000 7
b1000 y"
b1000 )#
b1000 "#
b110 .
b110 T
b110 |
b110 s"
b110 +#
b110 -
b110 {"
b110 ##
b110 *#
1!
#750
0!
#800
0-"
b1 5"
b1 ="
b1 E"
1S
0^
b1 C"
b1001 \
b1001 !"
bx V
bx {
b10 _
b10 q
b10 v
bx a"
bx f"
b1 F"
b11111111111111111111111111111110 B"
b1 A"
b1001 x
b1000 w
b110011 s
b10 p
1o
b11100 ^"
b11100 m"
b11100 n"
b1000 $
b1000 Q
b1000 y
b1000 1"
b1000 O"
b1000 T"
b1000 -#
b1000 0#
b0 ~"
b0 '#
b1 /"
b1 I"
b1 W"
b11000 :
b11000 W
b11000 ]"
b10100 <
b10100 X
b10100 `"
b100101000000010100110011 ?
b100101000000010100110011 Z
b100101000000010100110011 ~
b100101000000010100110011 b"
b11100 \"
b11100 i"
b11100 k"
b11000 _"
b11000 g"
b11000 j"
b11000 o"
b1000 E
b1000 w"
b1000 !#
b1000 (#
b1000 .#
b1100 7
b1100 y"
b1100 )#
b1100 "#
b111 .
b111 T
b111 |
b111 s"
b111 +#
b111 -
b111 {"
b111 ##
b111 *#
b1000 /
b1000 +"
b1000 9"
b1000 p"
b1000 z"
b10000 8
b10000 '"
b10000 x"
b10000 8"
b0 #
b0 ,"
b0 }"
b0 &#
b0 ;"
b0 F
b0 #"
b0 6"
b0 L"
b0 Q"
b0 v"
b0 %#
1&
1:"
b1 1
b1 O
b1 i
b1 r"
b10100 9
b10100 K
b10100 &"
b10100 e
b10000 ;
b10000 J
b10000 d
b10000 %"
b10000 X"
b1001 0
b1001 P
b1001 *"
b1001 j
b10001 5
b10001 2"
b10001 Z"
b10001 ["
b10001 l"
b1 @
b1 I
b1 b
b1 $"
b1 V"
b1 Y"
bx 3
bx M
bx g
0'
0l
b11000 e"
b10100 d"
b100101000000010100110011 c"
1!
#850
0!
#900
xS
bx `
bx r
0?"
x^
b1 B
b1 4"
b1 M"
b1 u"
0H"
bx \
bx !"
xY
xR
xt
bx [
bx u
bx }
bx _
bx q
bx v
x]
b10 A
b10 3"
b10 R"
b10 t"
b0 D"
0-"
b1 5"
b1 ="
b1 E"
0>"
bx x
bx w
bx s
xn
bx m
bx p
xo
b1 F"
b11111111111111111111111111111110 B"
b1 C"
0G"
b1 A"
b0 @"
b100000 ^"
b100000 m"
b100000 n"
b11100 :
b11100 W
b11100 ]"
b11000 <
b11000 X
b11000 `"
bx ?
bx Z
bx ~
bx b"
b1 /"
b1 I"
b1 W"
b0 0"
b0 J"
b0 N"
b1 ."
b1 S"
b1 U"
bx ~"
bx '#
b0 $
b0 Q
b0 y
b0 1"
b0 O"
b0 T"
b0 -#
b0 0#
b100000 \"
b100000 i"
b100000 k"
b11100 _"
b11100 g"
b11100 j"
b11100 o"
b11100 e"
b11000 d"
bx c"
b1001 1
b1001 O
b1001 i
b1001 r"
b1000 2
b1000 N
b1000 h
b1000 q"
b11000 9
b11000 K
b11000 &"
b11000 e
b10100 ;
b10100 J
b10100 d
b10100 %"
b10100 X"
b1010 0
b1010 P
b1010 *"
b1010 j
b11101 5
b11101 2"
b11101 Z"
b11101 ["
b11101 l"
b1001 @
b1001 I
b1001 b
b1001 $"
b1001 V"
b1001 Y"
bx 4
bx L
bx f
bx ("
bx )"
bx K"
bx P"
0D
b1001 /
b1001 +"
b1001 9"
b1001 p"
b1001 z"
b10100 8
b10100 '"
b10100 x"
b10100 8"
b1 F
b1 #"
b1 6"
b1 L"
b1 Q"
b1 v"
b1 %#
0&
0:"
b0 ,
b0 |"
b0 $#
b0 ,#
b0 /#
b0 E
b0 w"
b0 !#
b0 (#
b0 .#
b10000 7
b10000 y"
b10000 )#
b10000 "#
b1000 .
b1000 T
b1000 |
b1000 s"
b1000 +#
b1000 -
b1000 {"
b1000 ##
b1000 *#
1%
1!
#950
0!
#1000
x?"
bx @"
bx ."
bx S"
bx U"
xH"
bx 0"
bx J"
bx N"
bx A
bx 3"
bx R"
bx t"
bx B
bx 4"
bx M"
bx u"
b0x D"
x>"
bx F"
bx B"
bx A"
bx C"
xG"
x6
bx /"
bx I"
bx W"
bx ^"
bx m"
bx n"
b1 $
b1 Q
b1 y
b1 1"
b1 O"
b1 T"
b1 -#
b1 0#
x-"
bx 5"
bx ="
bx E"
b100000 :
b100000 W
b100000 ]"
b11100 <
b11100 X
b11100 `"
b100100 \"
b100100 i"
b100100 k"
b100000 _"
b100000 g"
b100000 j"
b100000 o"
bx ,
bx |"
bx $#
bx ,#
bx /#
b1 E
b1 w"
b1 !#
b1 (#
b1 .#
b10100 7
b10100 y"
b10100 )#
b10100 "#
b1001 .
b1001 T
b1001 |
b1001 s"
b1001 +#
b1001 -
b1001 {"
b1001 ##
b1001 *#
0%
b1010 /
b1010 +"
b1010 9"
b1010 p"
b1010 z"
b11000 8
b11000 '"
b11000 x"
b11000 8"
b1 #
b1 ,"
b1 }"
b1 &#
b1 ;"
bx 1
bx O
bx i
bx r"
bx 2
bx N
bx h
bx q"
b11100 9
b11100 K
b11100 &"
b11100 e
b11000 ;
b11000 J
b11000 d
b11000 %"
b11000 X"
bx 0
bx P
bx *"
bx j
bx 5
bx 2"
bx Z"
bx ["
bx l"
bx @
bx I
bx b
bx $"
bx V"
bx Y"
bx G
bx H
bx a
bx ""
bx <"
xC
x'
xl
x>
xc
xD
x+
xk
b100000 e"
b11100 d"
1!
#1050
0!
#1100
b100100 :
b100100 W
b100100 ]"
b100000 <
b100000 X
b100000 `"
bx \"
bx i"
bx k"
bx _"
bx g"
bx j"
bx o"
b100100 e"
b100000 d"
b100000 9
b100000 K
b100000 &"
b100000 e
b11100 ;
b11100 J
b11100 d
b11100 %"
b11100 X"
bx /
bx +"
bx 9"
bx p"
bx z"
b11100 8
b11100 '"
b11100 x"
b11100 8"
bx #
bx ,"
bx }"
bx &#
bx ;"
bx F
bx #"
bx 6"
bx L"
bx Q"
bx v"
bx %#
x=
x7"
x&
x:"
x*
b11000 7
b11000 y"
b11000 )#
b11000 "#
b1010 .
b1010 T
b1010 |
b1010 s"
b1010 +#
b1010 -
b1010 {"
b1010 ##
b1010 *#
1!
#1150
0!
#1200
bx $
bx Q
bx y
bx 1"
bx O"
bx T"
bx -#
bx 0#
bx :
bx W
bx ]"
bx <
bx X
bx `"
bx E
bx w"
bx !#
bx (#
bx .#
b11100 7
b11100 y"
b11100 )#
b11100 "#
bx .
bx T
bx |
bx s"
bx +#
bx -
bx {"
bx ##
bx *#
x%
x)
x(
b100000 8
b100000 '"
b100000 x"
b100000 8"
b100100 9
b100100 K
b100100 &"
b100100 e
b100000 ;
b100000 J
b100000 d
b100000 %"
b100000 X"
bx e"
bx d"
1!
#1250
0!
#1300
bx 9
bx K
bx &"
bx e
bx ;
bx J
bx d
bx %"
bx X"
b100100 8
b100100 '"
b100100 x"
b100100 8"
b100000 7
b100000 y"
b100000 )#
b100000 "#
1!
#1350
0!
#1400
b100100 7
b100100 y"
b100100 )#
b100100 "#
bx 8
bx '"
bx x"
bx 8"
1!
#1450
0!
#1500
bx 7
bx y"
bx )#
bx "#
1!
#1550
0!
#1600
1!
#1650
0!
#1700
1!
