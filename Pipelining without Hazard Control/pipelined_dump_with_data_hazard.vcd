$date
	Sat Sep 13 12:22:51 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module ppm $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 # WriteDataM_wire [31:0] $end
$var wire 32 $ ResultW_wire [31:0] $end
$var wire 1 % ResultSrcW_wire $end
$var wire 1 & ResultSrcM_wire $end
$var wire 1 ' ResultSrcE_wire $end
$var wire 1 ( RegWriteW_wire $end
$var wire 1 ) RegWriteW_wb_wire $end
$var wire 1 * RegWriteM_wire $end
$var wire 1 + RegWriteE_wire $end
$var wire 32 , ReadDataW_wire [31:0] $end
$var wire 5 - RdW_wire [4:0] $end
$var wire 5 . RdW_wb_wire [4:0] $end
$var wire 5 / RdM_wire [4:0] $end
$var wire 5 0 RdE_wire [4:0] $end
$var wire 32 1 RD2_E_wire [31:0] $end
$var wire 32 2 RD1_E_wire [31:0] $end
$var wire 32 3 PCTargetE_wire [31:0] $end
$var wire 1 4 PCSrcE_wire $end
$var wire 32 5 PCPlus4W_wire [31:0] $end
$var wire 32 6 PCPlus4M_wire [31:0] $end
$var wire 32 7 PCPlus4E_wire [31:0] $end
$var wire 32 8 PCPlus4D_wire [31:0] $end
$var wire 32 9 PCE_wire [31:0] $end
$var wire 32 : PCD_wire [31:0] $end
$var wire 1 ; MemWriteM_wire $end
$var wire 1 < MemWriteE_wire $end
$var wire 32 = InstrD_wire [31:0] $end
$var wire 32 > ImmExtE_wire [31:0] $end
$var wire 1 ? BranchE_wire $end
$var wire 1 @ ALUSrcE_wire $end
$var wire 32 A ALUResultW_wire [31:0] $end
$var wire 32 B ALUResultM_wire [31:0] $end
$var wire 3 C ALUControlE_wire [2:0] $end
$scope module ds $end
$var wire 3 D ALUControlE [2:0] $end
$var wire 1 @ ALUSrcE $end
$var wire 1 ? BranchE $end
$var wire 32 E ImmExtE [31:0] $end
$var wire 1 < MemWriteE $end
$var wire 32 F PCE [31:0] $end
$var wire 32 G PCPlus4E [31:0] $end
$var wire 32 H RD1_E [31:0] $end
$var wire 32 I RD2_E [31:0] $end
$var wire 5 J RdE [4:0] $end
$var wire 1 + RegWriteE $end
$var wire 1 ' ResultSrcE $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 K ResultW [31:0] $end
$var wire 1 L ResultSrcD $end
$var wire 1 ) RegWriteW $end
$var wire 1 M RegWriteD $end
$var wire 5 N RdW [4:0] $end
$var wire 32 O RD2_D [31:0] $end
$var wire 32 P RD1_D [31:0] $end
$var wire 32 Q PCPlus4D [31:0] $end
$var wire 32 R PCD [31:0] $end
$var wire 1 S MemWriteD $end
$var wire 32 T InstrD [31:0] $end
$var wire 2 U ImmSrcD [1:0] $end
$var wire 32 V ImmExtD [31:0] $end
$var wire 1 W BranchD $end
$var wire 1 X ALUSrcD $end
$var wire 2 Y ALUOp_wire [1:0] $end
$var wire 3 Z ALUControlD [2:0] $end
$var reg 3 [ ALUControlD_reg [2:0] $end
$var reg 1 @ ALUSrcD_reg $end
$var reg 1 ? BranchD_reg $end
$var reg 32 \ ImmExtD_reg [31:0] $end
$var reg 1 ] MemWriteD_reg $end
$var reg 32 ^ PCD_reg [31:0] $end
$var reg 32 _ PCPlus4D_reg [31:0] $end
$var reg 32 ` RD1_D_reg [31:0] $end
$var reg 32 a RD2_D_reg [31:0] $end
$var reg 5 b RdD_reg [4:0] $end
$var reg 1 c RegWriteD_reg $end
$var reg 1 d ResultSrcD_reg $end
$scope module adm $end
$var wire 3 e funct3 [2:0] $end
$var wire 1 f funct7 $end
$var wire 1 g op $end
$var wire 2 h concatenation [1:0] $end
$var wire 2 i ALUOp [1:0] $end
$var wire 3 j ALUControl [2:0] $end
$upscope $end
$scope module mdm $end
$var wire 7 k op [6:0] $end
$var wire 1 l branch $end
$var wire 1 L ResultSrc $end
$var wire 1 M RegWrite $end
$var wire 1 S MemWrite $end
$var wire 2 m ImmSrc [1:0] $end
$var wire 1 W Branch $end
$var wire 1 X ALUSrc $end
$var wire 2 n ALUOp [1:0] $end
$upscope $end
$scope module rfm $end
$var wire 5 o A1 [4:0] $end
$var wire 5 p A2 [4:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 ) WE3 $end
$var wire 32 q WD3 [31:0] $end
$var wire 32 r RD2 [31:0] $end
$var wire 32 s RD1 [31:0] $end
$var wire 5 t A3 [4:0] $end
$upscope $end
$scope module sem $end
$var wire 2 u ImmSrc [1:0] $end
$var wire 32 v Instr [31:0] $end
$var wire 32 w ImmExt [31:0] $end
$upscope $end
$upscope $end
$scope module es $end
$var wire 3 x ALUControlE [2:0] $end
$var wire 32 y ALUResultM [31:0] $end
$var wire 1 @ ALUSrcE $end
$var wire 1 ? BranchE $end
$var wire 32 z ImmExtE [31:0] $end
$var wire 1 < MemWriteE $end
$var wire 1 ; MemWriteM $end
$var wire 32 { PCE [31:0] $end
$var wire 32 | PCPlus4E [31:0] $end
$var wire 32 } PCPlus4M [31:0] $end
$var wire 1 4 PCSrcE $end
$var wire 32 ~ RD1_E [31:0] $end
$var wire 32 !" RD2_E [31:0] $end
$var wire 5 "" RdE [4:0] $end
$var wire 5 #" RdM [4:0] $end
$var wire 1 + RegWriteE $end
$var wire 1 * RegWriteM $end
$var wire 1 ' ResultSrcE $end
$var wire 1 & ResultSrcM $end
$var wire 32 $" WriteDataM [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 %" ZeroE $end
$var wire 32 &" SrcBE [31:0] $end
$var wire 32 '" PCTargetE [31:0] $end
$var wire 32 (" ALUResultE [31:0] $end
$var reg 32 )" ALUResultE_reg [31:0] $end
$var reg 1 *" MemWriteE_reg $end
$var reg 32 +" PCPlus4E_reg [31:0] $end
$var reg 5 ," RdE_reg [4:0] $end
$var reg 1 -" RegWriteE_reg $end
$var reg 1 ." ResultSrcE_reg $end
$var reg 32 /" WriteDataE_reg [31:0] $end
$scope module am $end
$var wire 32 0" A [31:0] $end
$var wire 3 1" ALUControl [2:0] $end
$var wire 32 2" ALUResult [31:0] $end
$var wire 1 3" C $end
$var wire 1 4" V $end
$var wire 32 5" a_and_b [31:0] $end
$var wire 32 6" a_or_b [31:0] $end
$var wire 32 7" not_b [31:0] $end
$var wire 32 8" sum [31:0] $end
$var wire 32 9" slt [31:0] $end
$var wire 32 :" mux_2 [31:0] $end
$var wire 32 ;" mux_1 [31:0] $end
$var wire 1 <" cout $end
$var wire 1 %" Ze $end
$var wire 1 =" N $end
$var wire 32 >" B [31:0] $end
$upscope $end
$scope module mm $end
$var wire 32 ?" a [31:0] $end
$var wire 32 @" b [31:0] $end
$var wire 1 @ s $end
$var wire 32 A" c [31:0] $end
$upscope $end
$scope module pa $end
$var wire 32 B" a [31:0] $end
$var wire 32 C" b [31:0] $end
$var wire 32 D" c [31:0] $end
$upscope $end
$upscope $end
$scope module fs $end
$var wire 1 4 PCSrcE $end
$var wire 32 E" PCTargetE [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 F" PCPlus4F [31:0] $end
$var wire 32 G" PCPlus4D [31:0] $end
$var wire 32 H" PCFbar [31:0] $end
$var wire 32 I" PCF [31:0] $end
$var wire 32 J" PCD [31:0] $end
$var wire 32 K" InstrF [31:0] $end
$var wire 32 L" InstrD [31:0] $end
$var reg 32 M" InstrF_reg [31:0] $end
$var reg 32 N" PCF_reg [31:0] $end
$var reg 32 O" PCPlus4F_reg [31:0] $end
$scope module im $end
$var wire 1 " rst $end
$var wire 32 P" RD [31:0] $end
$var wire 32 Q" A [31:0] $end
$upscope $end
$scope module pam $end
$var wire 32 R" b [31:0] $end
$var wire 32 S" c [31:0] $end
$var wire 32 T" a [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 U" a [31:0] $end
$var wire 32 V" b [31:0] $end
$var wire 1 4 s $end
$var wire 32 W" c [31:0] $end
$upscope $end
$scope module pcm $end
$var wire 32 X" PC_NEXT [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var reg 32 Y" PC [31:0] $end
$upscope $end
$upscope $end
$scope module mrws $end
$var wire 32 Z" ALUResultM [31:0] $end
$var wire 32 [" ALUResultW [31:0] $end
$var wire 1 ; MemWriteM $end
$var wire 32 \" PCPlus4M [31:0] $end
$var wire 32 ]" PCPlus4W [31:0] $end
$var wire 5 ^" RdM [4:0] $end
$var wire 5 _" RdW [4:0] $end
$var wire 32 `" ReadDataW [31:0] $end
$var wire 1 * RegWriteM $end
$var wire 1 ( RegWriteW $end
$var wire 1 & ResultSrcM $end
$var wire 1 % ResultSrcW $end
$var wire 32 a" WriteDataM [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 b" RD_M [31:0] $end
$var reg 32 c" ALUResultM_reg [31:0] $end
$var reg 32 d" PCPlus4M_reg [31:0] $end
$var reg 5 e" RdM_reg [4:0] $end
$var reg 32 f" ReadDataM_reg [31:0] $end
$var reg 1 ( RegWriteM_reg $end
$var reg 1 % ResultSrcM_reg $end
$scope module dmm $end
$var wire 32 g" A [31:0] $end
$var wire 32 h" WD [31:0] $end
$var wire 1 ; WE $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 i" RD [31:0] $end
$upscope $end
$upscope $end
$scope module wbrs $end
$var wire 32 j" ALUResultW [31:0] $end
$var wire 32 k" PCPlus4W [31:0] $end
$var wire 5 l" RdW [4:0] $end
$var wire 5 m" RdW_wb [4:0] $end
$var wire 32 n" ReadDataW [31:0] $end
$var wire 1 ( RegWriteW $end
$var wire 1 ) RegWriteW_wb $end
$var wire 1 % ResultSrcW $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 o" ResultW [31:0] $end
$scope module mm1 $end
$var wire 32 p" a [31:0] $end
$var wire 32 q" b [31:0] $end
$var wire 1 % s $end
$var wire 32 r" c [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
bx Y"
bx X"
bx W"
b0 V"
bx U"
bx T"
bx S"
b100 R"
bx Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
bx I"
bx H"
b0 G"
bx F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
0="
0<"
b0 ;"
b0 :"
b0 9"
b0 8"
b11111111111111111111111111111111 7"
b0 6"
b0 5"
04"
03"
b0 2"
b0 1"
b0 0"
b0 /"
0."
0-"
b0 ,"
b0 +"
0*"
b0 )"
b0 ("
b0 '"
b0 &"
1%"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
0l
b0 k
b0 j
b0 i
b0 h
0g
0f
b0 e
0d
0c
b0 b
b0 a
b0 `
b0 _
b0 ^
0]
b0 \
b0 [
b0 Z
b0 Y
0X
0W
b0 V
b0 U
b0 T
0S
b0 R
b0 Q
b0 P
b0 O
b0 N
0M
0L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
0@
0?
b0 >
b0 =
0<
0;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
04
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
0+
0*
0)
0(
0'
0&
0%
b0 $
b0 #
0"
1!
$end
#50
0!
#100
b100 H"
b100 W"
b100 X"
b100 F"
b100 S"
b100 U"
b0 I"
b0 Q"
b0 T"
b0 Y"
1!
#150
0!
#200
b10100000000001010010011 K"
b10100000000001010010011 P"
1"
1!
#250
0!
#300
1M
1X
b101 V
b101 w
bx O
bx r
b1100000000001100010011 K"
b1100000000001100010011 P"
b101 p
b10011 k
b1000 H"
b1000 W"
b1000 X"
b100 8
b100 Q
b100 G"
b10100000000001010010011 =
b10100000000001010010011 T
b10100000000001010010011 v
b10100000000001010010011 L"
b1000 F"
b1000 S"
b1000 U"
b100 I"
b100 Q"
b100 T"
b100 Y"
b100 O"
b10100000000001010010011 M"
1!
#350
0!
#400
0%"
b101 ("
b101 2"
b101 :"
b101 8"
b101 ;"
b11111111111111111111111111111010 7"
b101 6"
b11 V
b11 w
b11000101000001110110011 K"
b11000101000001110110011 P"
b101 &"
b101 >"
b101 A"
b11 p
b1100 H"
b1100 W"
b1100 X"
b1000 8
b1000 Q
b1000 G"
b100 :
b100 R
b100 J"
b1100000000001100010011 =
b1100000000001100010011 T
b1100000000001100010011 v
b1100000000001100010011 L"
b1100 F"
b1100 S"
b1100 U"
b1000 I"
b1000 Q"
b1000 T"
b1000 Y"
b100 7
b100 G
b100 |
b100 _
b101 0
b101 J
b101 ""
b101 b
b101 3
b101 '"
b101 D"
b101 E"
b101 V"
b101 >
b101 E
b101 \
b101 z
b101 @"
b101 C"
bx 1
bx I
bx a
1@
1+
1c
b1000 O"
b100 N"
b1100000000001100010011 M"
1!
#450
0!
#500
1M
0X
b11 ("
b11 2"
b11 :"
b110 V
b110 w
bx P
bx s
b10 Y
b10 i
b10 n
b11 8"
b10010000000011 K"
b10010000000011 P"
b110 p
b101 o
b110011 k
b10 h
1g
b11 ;"
b11111111111111111111111111111100 7"
b11 6"
b10000 H"
b10000 W"
b10000 X"
b1100 8
b1100 Q
b1100 G"
b1000 :
b1000 R
b1000 J"
b11000101000001110110011 =
b11000101000001110110011 T
b11000101000001110110011 v
b11000101000001110110011 L"
b11 &"
b11 >"
b11 A"
bx b"
bx i"
b10000 F"
b10000 S"
b10000 U"
b1100 I"
b1100 Q"
b1100 T"
b1100 Y"
b1100 O"
b1000 N"
b11000101000001110110011 M"
b1000 7
b1000 G
b1000 |
b1000 _
b100 9
b100 F
b100 ^
b100 {
b100 B"
b110 0
b110 J
b110 ""
b110 b
b111 3
b111 '"
b111 D"
b111 E"
b111 V"
b11 >
b11 E
b11 \
b11 z
b11 @"
b11 C"
b101 /
b101 #"
b101 ^"
b101 ,"
b100 6
b100 }
b100 \"
b100 +"
b101 B
b101 y
b101 )"
b101 Z"
b101 g"
1*
1-"
1!
#550
0!
#600
1X
x4"
x="
b0 V
b0 w
b0 O
b0 r
b0 P
b0 s
1L
b0 Y
b0 i
b0 n
b100000000010010010011 K"
b100000000010010010011 P"
bx ;"
bx 7"
b0x 9"
x%"
bx ("
bx 2"
bx :"
x3"
b0 p
b0 o
b11 k
b10 e
b0 h
0g
b10100 H"
b10100 W"
b10100 X"
b101 $
b101 K
b101 q
b101 o"
b101 r"
bx &"
bx >"
bx A"
bx 5"
bx 6"
bx 8"
x<"
b10000 8
b10000 Q
b10000 G"
b1100 :
b1100 R
b1100 J"
b10010000000011 =
b10010000000011 T
b10010000000011 v
b10010000000011 L"
b10100 F"
b10100 S"
b10100 U"
b10000 I"
b10000 Q"
b10000 T"
b10000 Y"
bx ,
bx `"
bx f"
bx n"
bx q"
b101 A
b101 ["
b101 c"
b101 j"
b101 p"
b100 5
b100 ]"
b100 k"
b100 d"
b101 .
b101 N
b101 t
b101 m"
b101 -
b101 _"
b101 e"
b101 l"
1)
1(
b110 /
b110 #"
b110 ^"
b110 ,"
b1000 6
b1000 }
b1000 \"
b1000 +"
b11 B
b11 y
b11 )"
b11 Z"
b11 g"
b1100 7
b1100 G
b1100 |
b1100 _
b1000 9
b1000 F
b1000 ^
b1000 {
b1000 B"
b111 0
b111 J
b111 ""
b111 b
b1110 3
b1110 '"
b1110 D"
b1110 E"
b1110 V"
b110 >
b110 E
b110 \
b110 z
b110 @"
b110 C"
bx 2
bx H
bx `
bx ~
bx !"
bx 0"
bx ?"
0@
b10000 O"
b1100 N"
b10010000000011 M"
1!
#650
0!
#700
04"
0="
b0 9"
1%"
b0 ("
b0 2"
b0 :"
03"
b1 V
b1 w
bx O
bx r
0L
b0 8"
0<"
b100101000000010100110011 K"
b100101000000010100110011 P"
b1 p
b10011 k
b0 e
b0 ;"
b11111111111111111111111111111111 7"
b11000 H"
b11000 W"
b11000 X"
b10100 8
b10100 Q
b10100 G"
b10000 :
b10000 R
b10000 J"
b100000000010010010011 =
b100000000010010010011 T
b100000000010010010011 v
b100000000010010010011 L"
b0 5"
b0 6"
b0 &"
b0 >"
b0 A"
b11 $
b11 K
b11 q
b11 o"
b11 r"
b11000 F"
b11000 S"
b11000 U"
b10100 I"
b10100 Q"
b10100 T"
b10100 Y"
b10100 O"
b10000 N"
b100000000010010010011 M"
b10000 7
b10000 G
b10000 |
b10000 _
b1100 9
b1100 F
b1100 ^
b1100 {
b1100 B"
b1000 0
b1000 J
b1000 ""
b1000 b
b1100 3
b1100 '"
b1100 D"
b1100 E"
b1100 V"
b0 >
b0 E
b0 \
b0 z
b0 @"
b0 C"
b0 1
b0 I
b0 a
b0 2
b0 H
b0 `
b0 ~
b0 !"
b0 0"
b0 ?"
1'
1d
1@
b111 /
b111 #"
b111 ^"
b111 ,"
b1100 6
b1100 }
b1100 \"
b1100 +"
bx #
bx $"
bx a"
bx h"
bx /"
bx B
bx y
bx )"
bx Z"
bx g"
b11 A
b11 ["
b11 c"
b11 j"
b11 p"
b1000 5
b1000 ]"
b1000 k"
b1000 d"
b110 .
b110 N
b110 t
b110 m"
b110 -
b110 _"
b110 e"
b110 l"
1!
#750
0!
#800
0%"
b1 ("
b1 2"
b1 :"
1M
0X
b1 8"
b1001 V
b1001 w
bx P
bx s
b10 Y
b10 i
b10 n
bx K"
bx P"
b1 ;"
b11111111111111111111111111111110 7"
b1 6"
b1001 p
b1000 o
b110011 k
b10 h
1g
b11100 H"
b11100 W"
b11100 X"
bx $
bx K
bx q
bx o"
bx r"
b0 b"
b0 i"
b1 &"
b1 >"
b1 A"
b11000 8
b11000 Q
b11000 G"
b10100 :
b10100 R
b10100 J"
b100101000000010100110011 =
b100101000000010100110011 T
b100101000000010100110011 v
b100101000000010100110011 L"
b11100 F"
b11100 S"
b11100 U"
b11000 I"
b11000 Q"
b11000 T"
b11000 Y"
bx A
bx ["
bx c"
bx j"
bx p"
b1100 5
b1100 ]"
b1100 k"
b1100 d"
b111 .
b111 N
b111 t
b111 m"
b111 -
b111 _"
b111 e"
b111 l"
b1000 /
b1000 #"
b1000 ^"
b1000 ,"
b10000 6
b10000 }
b10000 \"
b10000 +"
b0 #
b0 $"
b0 a"
b0 h"
b0 /"
b0 B
b0 y
b0 )"
b0 Z"
b0 g"
1&
1."
b10100 7
b10100 G
b10100 |
b10100 _
b10000 9
b10000 F
b10000 ^
b10000 {
b10000 B"
b1001 0
b1001 J
b1001 ""
b1001 b
b10001 3
b10001 '"
b10001 D"
b10001 E"
b10001 V"
b1 >
b1 E
b1 \
b1 z
b1 @"
b1 C"
bx 1
bx I
bx a
0'
0d
b11000 O"
b10100 N"
b100101000000010100110011 M"
1!
#850
0!
#900
xM
bx Z
bx j
xX
x4"
bx V
bx w
xS
xL
xl
bx U
bx m
bx u
bx Y
bx i
bx n
xW
x="
bx p
bx o
bx k
xf
bx e
bx h
xg
bx ;"
bx 7"
b0x 9"
x%"
bx ("
bx 2"
bx :"
x3"
b100000 H"
b100000 W"
b100000 X"
b11100 8
b11100 Q
b11100 G"
b11000 :
b11000 R
b11000 J"
bx =
bx T
bx v
bx L"
bx &"
bx >"
bx A"
bx 5"
bx 6"
bx 8"
x<"
bx b"
bx i"
b0 $
b0 K
b0 q
b0 o"
b0 r"
b100000 F"
b100000 S"
b100000 U"
b11100 I"
b11100 Q"
b11100 T"
b11100 Y"
b11100 O"
b11000 N"
bx M"
b11000 7
b11000 G
b11000 |
b11000 _
b10100 9
b10100 F
b10100 ^
b10100 {
b10100 B"
b1010 0
b1010 J
b1010 ""
b1010 b
b11101 3
b11101 '"
b11101 D"
b11101 E"
b11101 V"
b1001 >
b1001 E
b1001 \
b1001 z
b1001 @"
b1001 C"
bx 2
bx H
bx `
bx ~
bx !"
bx 0"
bx ?"
0@
b1001 /
b1001 #"
b1001 ^"
b1001 ,"
b10100 6
b10100 }
b10100 \"
b10100 +"
b1 B
b1 y
b1 )"
b1 Z"
b1 g"
0&
0."
b0 ,
b0 `"
b0 f"
b0 n"
b0 q"
b0 A
b0 ["
b0 c"
b0 j"
b0 p"
b10000 5
b10000 ]"
b10000 k"
b10000 d"
b1000 .
b1000 N
b1000 t
b1000 m"
b1000 -
b1000 _"
b1000 e"
b1000 l"
1%
1!
#950
0!
#1000
bx H"
bx W"
bx X"
b1 $
b1 K
b1 q
b1 o"
b1 r"
x4
b100000 8
b100000 Q
b100000 G"
b11100 :
b11100 R
b11100 J"
b100100 F"
b100100 S"
b100100 U"
b100000 I"
b100000 Q"
b100000 T"
b100000 Y"
bx ,
bx `"
bx f"
bx n"
bx q"
b1 A
b1 ["
b1 c"
b1 j"
b1 p"
b10100 5
b10100 ]"
b10100 k"
b10100 d"
b1001 .
b1001 N
b1001 t
b1001 m"
b1001 -
b1001 _"
b1001 e"
b1001 l"
0%
b1010 /
b1010 #"
b1010 ^"
b1010 ,"
b11000 6
b11000 }
b11000 \"
b11000 +"
bx #
bx $"
bx a"
bx h"
bx /"
bx B
bx y
bx )"
bx Z"
bx g"
b11100 7
b11100 G
b11100 |
b11100 _
b11000 9
b11000 F
b11000 ^
b11000 {
b11000 B"
bx 0
bx J
bx ""
bx b
bx 3
bx '"
bx D"
bx E"
bx V"
bx >
bx E
bx \
bx z
bx @"
bx C"
bx C
bx D
bx [
bx x
bx 1"
x?
x'
xd
x<
x]
x@
x+
xc
b100000 O"
b11100 N"
1!
#1050
0!
#1100
b100100 8
b100100 Q
b100100 G"
b100000 :
b100000 R
b100000 J"
bx $
bx K
bx q
bx o"
bx r"
bx F"
bx S"
bx U"
bx I"
bx Q"
bx T"
bx Y"
b100100 O"
b100000 N"
b100000 7
b100000 G
b100000 |
b100000 _
b11100 9
b11100 F
b11100 ^
b11100 {
b11100 B"
bx /
bx #"
bx ^"
bx ,"
b11100 6
b11100 }
b11100 \"
b11100 +"
x;
x*"
x&
x."
x*
x-"
bx A
bx ["
bx c"
bx j"
bx p"
b11000 5
b11000 ]"
b11000 k"
b11000 d"
b1010 .
b1010 N
b1010 t
b1010 m"
b1010 -
b1010 _"
b1010 e"
b1010 l"
1!
#1150
0!
#1200
bx 8
bx Q
bx G"
bx :
bx R
bx J"
b11100 5
b11100 ]"
b11100 k"
b11100 d"
bx .
bx N
bx t
bx m"
bx -
bx _"
bx e"
bx l"
x%
x)
x(
b100000 6
b100000 }
b100000 \"
b100000 +"
b100100 7
b100100 G
b100100 |
b100100 _
b100000 9
b100000 F
b100000 ^
b100000 {
b100000 B"
bx O"
bx N"
1!
#1250
0!
#1300
bx 7
bx G
bx |
bx _
bx 9
bx F
bx ^
bx {
bx B"
b100100 6
b100100 }
b100100 \"
b100100 +"
b100000 5
b100000 ]"
b100000 k"
b100000 d"
1!
#1350
0!
#1400
b100100 5
b100100 ]"
b100100 k"
b100100 d"
bx 6
bx }
bx \"
bx +"
1!
#1450
0!
#1500
bx 5
bx ]"
bx k"
bx d"
1!
#1550
0!
#1600
1!
#1650
0!
#1700
1!
